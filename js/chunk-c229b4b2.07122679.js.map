{"version":3,"sources":["webpack:///./src/components/base_info_component.vue?04c0","webpack:///src/components/base_info_component.vue","webpack:///./src/components/base_info_component.vue?5d85","webpack:///./src/components/base_info_component.vue","webpack:///./src/views/Home.vue?019b","webpack:///./src/components/article_list_component.vue?8a9c","webpack:///src/components/article_list_component.vue","webpack:///./src/components/article_list_component.vue?04a3","webpack:///./src/components/article_list_component.vue","webpack:///./src/components/base_info_component.vue?b436","webpack:///./src/components/swiper_component.vue?c36d","webpack:///./src/components/article_list_component.vue?ee56","webpack:///./src/views/Home.vue?78dd","webpack:///./src/components/swiper_component.vue?02b7","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///src/components/swiper_component.vue","webpack:///./src/components/swiper_component.vue?43d8","webpack:///./src/components/swiper_component.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?ef24","webpack:///./src/views/Home.vue","webpack:///./src/assets/images/timg1.jpg","webpack:///./src/assets/images/timg3.jpg"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","_v","_s","baseData","_m","staticRenderFns","base_info_componentvue_type_script_lang_js_","props","type","Object","required","[object Object]","imgUrl","timg2_default","a","methods","components_base_info_componentvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","n","_l","item","index","key","attrs","articleData","article_list_componentvue_type_script_lang_js_","components","breadCrumbComponent","resolve","e","then","__WEBPACK_AMD_REQUIRE_ARRAY__","apply","bind","catch","oe","articleItemComponent","articleList","Array","components_article_list_componentvue_type_script_lang_js_","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_base_info_component_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_base_info_component_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_swiper_component_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_swiper_component_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_article_list_component_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_article_list_component_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","Homevue_type_template_id_75de4644_render","list","swiper_componentvue_type_template_id_69b38040_render","items","swiper_componentvue_type_template_id_69b38040_staticRenderFns","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","arguments","getAttribute","attrName","removeAttr","removeAttribute","dom7_modular_data","el","dom7ElementDataStorage","dataKey","dom7_modular_transform","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","target","eventData","dom7EventData","unshift","is","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","data","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","dom7_modular_offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","prop","each","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","offset","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_bundle_Browser","isSafari","ua","toLowerCase","isIE","isEdge","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","create","use","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","swiper_esm_bundle_transitionEnd","animating","swiper_esm_bundle_transition","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","swiper_esm_bundle","swiper_componentvue_type_script_lang_js_","imgList","id","timg1_default","timg3_default","timg4_default","components_swiper_componentvue_type_script_lang_js_","swiper_component","Homevue_type_script_lang_js_","swiperComponent","articleListComponent","article_list_component","baseInfoComponent","base_info_component","content","title","views_Homevue_type_script_lang_js_","Home_component","exports"],"mappings":"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","file":"js/chunk-c229b4b2.07122679.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"base_info_box\"},[_c('div',{staticClass:\"base_info_box_photo\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(_vm.imgUrl),expression:\"imgUrl\"}]})]),_c('div',{staticClass:\"base_info_box_name borderbt\"},[_vm._v(_vm._s(_vm.baseData.name))]),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"base_info_box_age borderbt\"},[_c('div',[_vm._v(\"90後\")]),_c('div',[_vm._v(\"Boy\")]),_c('div',[_vm._v(\"摩羯座\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"base_info_box\">\r\n        <div class=\"base_info_box_photo\">\r\n            <img v-lazy=\"imgUrl\">\r\n        </div>\r\n        <div class=\"base_info_box_name borderbt\">{{baseData.name}}</div>\r\n        <div class=\"base_info_box_age borderbt\">\r\n            <div>90後</div>\r\n            <div>Boy</div>\r\n            <div>摩羯座</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import img1 from '../assets/images/timg2.jpg'\r\n    export default {\r\n        props: {\r\n            baseData:{\r\n                type:Object,\r\n                required:true\r\n            }\r\n        },\r\n        data(){\r\n            return {\r\n                imgUrl:img1\r\n            }\r\n        },\r\n        mounted() {\r\n\r\n        },\r\n        methods:{\r\n\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"scss\">\r\n    $prefix: base_info_box;\r\n\r\n    .#{$prefix} {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        padding: 0 10px;\r\n        &_photo{\r\n            width: 120px;\r\n            height: 120px;\r\n            border-radius: 100%;\r\n            overflow: hidden;\r\n            margin-top: 20px;\r\n            img{\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n        }\r\n        &_name{\r\n            width: 100%;\r\n            font-size: 20px;\r\n            padding: 10px 0;\r\n            text-align: center;\r\n        }\r\n        &_age{\r\n            width: 100%;\r\n            display: flex;\r\n            padding: 10px 0;\r\n            justify-content: space-around;\r\n        }\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./base_info_component.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./base_info_component.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./base_info_component.vue?vue&type=template&id=3c7c72ca&\"\nimport script from \"./base_info_component.vue?vue&type=script&lang=js&\"\nexport * from \"./base_info_component.vue?vue&type=script&lang=js&\"\nimport style0 from \"./base_info_component.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"article_list_box\"},[_c('breadCrumbComponent',{staticClass:\"bread_crumb_component\"}),_vm._l((_vm.articleList),function(item,index){return _c('div',{key:index,staticClass:\"article_list_box_body\"},[_c('articleItemComponent',{attrs:{\"articleData\":item}})],1)})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"article_list_box\">\r\n        <breadCrumbComponent class=\"bread_crumb_component\"></breadCrumbComponent>\r\n        <div class=\"article_list_box_body\" v-for=\"(item,index) in articleList\" :key=\"index\">\r\n            <articleItemComponent :articleData=\"item\"></articleItemComponent>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        components: {\r\n            breadCrumbComponent:resolve =>{\r\n                require(['../components/bread_crumb_component'], resolve)\r\n            },\r\n            articleItemComponent: resolve =>{\r\n                require(['../components/article_item_component'], resolve)\r\n            }\r\n        },\r\n        props: {\r\n            articleList:{\r\n                type: Array,\r\n                required: true\r\n            }\r\n        },\r\n        data(){\r\n            return {\r\n\r\n            }\r\n        },\r\n        mounted() {\r\n\r\n        },\r\n        methods:{\r\n\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"scss\">\r\n    $prefix: article_list_box;\r\n\r\n    .#{$prefix} {\r\n        &_body{\r\n            width: 100%;\r\n        }\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./article_list_component.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./article_list_component.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./article_list_component.vue?vue&type=template&id=bcbdbb42&\"\nimport script from \"./article_list_component.vue?vue&type=script&lang=js&\"\nexport * from \"./article_list_component.vue?vue&type=script&lang=js&\"\nimport style0 from \"./article_list_component.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./base_info_component.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./base_info_component.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swiper_component.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swiper_component.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./article_list_component.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./article_list_component.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home_box\"},[_c('swiperComponent',{staticClass:\"home_box_swiper\"}),_c('div',{staticClass:\"home_box_content\"},[_c('div',{staticClass:\"home_box_content_article\"},[_c('articleListComponent',{attrs:{\"articleList\":_vm.list}})],1),_c('div',{staticClass:\"home_box_content_more\"},[_c('baseInfoComponent',{attrs:{\"baseData\":_vm.baseData}})],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"swiper_box\"},[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.imgList),function(items,index){return _c('div',{key:index,staticClass:\"swiper-slide\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(items.url),expression:\"items.url\"}]})])}),0),_c('div',{staticClass:\"swiper-pagination\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","<template>\r\n    <div class=\"swiper_box\">\r\n        <div class=\"swiper-container\">\r\n            <div class=\"swiper-wrapper\">\r\n                <div class=\"swiper-slide\" v-for=\"(items, index) in imgList\" :key=\"index\">\r\n                    <img v-lazy=\"items.url\">\r\n                </div>\r\n            </div>\r\n            <!-- 如果需要分页器 -->\r\n            <div class=\"swiper-pagination\"></div>\r\n\r\n           <!-- &lt;!&ndash; 如果需要导航按钮 &ndash;&gt;\r\n            <div class=\"swiper-button-prev\"></div>\r\n            <div class=\"swiper-button-next\"></div>-->\r\n\r\n            <!-- 如果需要滚动条 -->\r\n            <!--<div class=\"swiper-scrollbar\"></div>-->\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Swiper from 'swiper'\r\n    import img1 from '../assets/images/timg1.jpg'\r\n    import img2 from '../assets/images/timg2.jpg'\r\n    import img3 from '../assets/images/timg3.jpg'\r\n    import img4 from '../assets/images/timg4.jpg'\r\n    export default{\r\n        components:{\r\n        },\r\n        data(){\r\n            return{\r\n                imgList:[\r\n                    {id:'1', url:img1},\r\n                    {id:'2', url:img2},\r\n                    {id:'3', url:img3},\r\n                    {id:'4', url:img4}\r\n                ]\r\n            }\r\n        },\r\n        mounted() {\r\n            let swiper = new Swiper('.swiper-container',{\r\n                init:false,\r\n                speed:600,\r\n                loop:true,\r\n                autoplay: {\r\n                    delay:3000\r\n                },\r\n                // 如果需要分页器\r\n                pagination: {\r\n                    el: '.swiper-pagination',\r\n                    clickable :true,\r\n                },\r\n\r\n             /*   // 如果需要前进后退按钮\r\n                navigation: {\r\n                    nextEl: '.swiper-button-next',\r\n                    prevEl: '.swiper-button-prev',\r\n                },*/\r\n\r\n                // 如果需要滚动条\r\n                /*scrollbar: {\r\n                    el: '.swiper-scrollbar',\r\n                },*/\r\n            });\r\n\r\n            swiper.init();\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"scss\">\r\n    $prefix: swiper_box;\r\n\r\n    .#{$prefix}{\r\n        width: 100%;\r\n        height: 100%;\r\n        .swiper-container{\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: antiquewhite;\r\n            display: flex;\r\n            align-items: center;\r\n            .swiper-slide{\r\n                img{\r\n                    width: 100%;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swiper_component.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swiper_component.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./swiper_component.vue?vue&type=template&id=69b38040&\"\nimport script from \"./swiper_component.vue?vue&type=script&lang=js&\"\nexport * from \"./swiper_component.vue?vue&type=script&lang=js&\"\nimport style0 from \"./swiper_component.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"home_box\">\n      <swiperComponent class=\"home_box_swiper\"></swiperComponent>\n      <div class=\"home_box_content\">\n          <div class=\"home_box_content_article\">\n              <articleListComponent :articleList=\"list\"></articleListComponent>\n          </div>\n          <div class=\"home_box_content_more\">\n              <baseInfoComponent :baseData=\"baseData\"></baseInfoComponent>\n          </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport swiperComponent from '../components/swiper_component'\nimport articleListComponent from '../components/article_list_component'\nimport baseInfoComponent from '../components/base_info_component'\nexport default {\n  name: 'home',\n  components: {\n      swiperComponent,\n      articleListComponent,\n      baseInfoComponent\n  },\n    data(){\n        return{\n            list:[\n                {id:'1',content:'世界很大很舒服空手道解放客户看手机电话偶是都温柔二五i空间和雕刻技术框架和史蒂芬开始计划发射口径的咖啡护卫会计师大后方空间看多少积分回馈设计开发看手机电话费可视角度回复可见撒看见好看就是房价还是看的反抗精神的喀什酱豆腐和会计师大后方开始就货到付款u二五回复可见双方就开始的客服电话空间',title:'爱说大话噶',time:'2019-12-11'},\n                {id:'1',content:'世界很大很舒服空手道解放客户看手机电话偶是都温柔二五i空间和雕刻技术框架和史蒂芬开始计划发射口径的咖啡护卫会计师大后方空间看多少积分回馈设计开发看手机电话费可视角度回复可见撒看见好看就是房价还是看的反抗精神的喀什酱豆腐和会计师大后方开始就货到付款u二五回复可见双方就开始的客服电话空间',title:'爱说大话噶',time:'2019-12-11'},\n                {id:'1',content:'世界很大很舒服空手道解放客户看手机电话偶是都温柔二五i空间和雕刻技术框架和史蒂芬开始计划发射口径的咖啡护卫会计师大后方空间看多少积分回馈设计开发看手机电话费可视角度回复可见撒看见好看就是房价还是看的反抗精神的喀什酱豆腐和会计师大后方开始就货到付款u二五回复可见双方就开始的客服电话空间',title:'爱说大话噶',time:'2019-12-11'},\n                {id:'1',content:'世界很大很舒服空手道解放客户看手机电话偶是都温柔二五i空间和雕刻技术框架和史蒂芬开始计划发射口径的咖啡护卫会计师大后方空间看多少积分回馈设计开发看手机电话费可视角度回复可见撒看见好看就是房价还是看的反抗精神的喀什酱豆腐和会计师大后方开始就货到付款u二五回复可见双方就开始的客服电话空间',title:'爱说大话噶',time:'2019-12-11'},\n                {id:'1',content:'世界很大很舒服空手道解放客户看手机电话偶是都温柔二五i空间和雕刻技术框架和史蒂芬开始计划发射口径的咖啡护卫会计师大后方空间看多少积分回馈设计开发看手机电话费可视角度回复可见撒看见好看就是房价还是看的反抗精神的喀什酱豆腐和会计师大后方开始就货到付款u二五回复可见双方就开始的客服电话空间',title:'爱说大话噶',time:'2019-12-11'},\n                {id:'2',content:'世界很大很舒服空手道解放客户看手机电话偶是都温柔二五i空间和雕刻技术框架和史蒂芬开始计划发射口径的咖啡护卫会计师大后方空间看多少what回馈设计开发看手机电话费可视角度回复可见撒看见好看就是房价还是看的反抗精神的喀什酱豆腐和会计师大后方开始就货到付款u二五回复可见双方就开始的客服电话空间',title:'尽快释放是到付还是犯得上发jhgjhghk非官方大哥身份为微软微软微软为',time:'2019-12-12 15:23:21'}\n            ],\n            baseData:{\n                name:'JyLiu'\n            }\n        }\n    },\n    mounted(){\n    },\n    methods:{\n    }\n}\n</script>\n<style lang=\"scss\">\n  $prefix: home_box;\n\n  .#{$prefix}{\n      &_swiper{\n        height: 300px;\n      }\n      &_content{\n          display: flex;\n          &_article{\n              width: 70%;\n          }\n          &_more{\n              width: 30%;\n              height: 100%;\n          }\n      }\n  }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=75de4644&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/timg1.32176762.jpg\";","module.exports = __webpack_public_path__ + \"img/timg3.c2cbd6e5.jpg\";"],"sourceRoot":""}